{"version":3,"sources":["../rental_project/src/application/reducers/WelcomeReducer.js","../rental_project/src/application/reducers/index.js","../rental_project/src/system/engine/reducers.js","../rental_project/src/system/engine/store.js","../rental_project/src/application/helpers/helpers.js","../rental_project/src/application/routes/Routes.js","../rental_project/src/system/engine/routes.js","../rental_project/src/system/engine/app.js","../rental_project/src/system/engine/serviceWorker.js","../rental_project/src/system/engine/root.js"],"names":["initialState","reducers","welcome","state","arguments","length","undefined","action","type","Object","objectSpread2","payload","rootReducer","combineReducers","form","formReducer","appReducer","reduxLogger","createLogger","store","createStore","applyMiddleware","thunkMiddleware","history","window","createMemoryHistory","createHistory","ajaxRequest","args","url","concat","process","REACT_APP_API_URL","console","log","headers","apikey","REACT_APP_API_KEY","apisecret","REACT_APP_API_SECRET","axios","PrivateRoute","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","localStorage","getItem","to","pathname","from","location","submitStart","form_name","dispatch","startSubmit","formSuccessHandler","message","toast","success","stopSubmit","reset","formErrorHandler","error","response","data","getLoggedInUser","JSON","parse","succesMessage","serverErrorHandler","status","routes_Routes","path","React","lazy","Promise","all","__webpack_require__","e","then","bind","private","Routes","routes","toConsumableArray","appRoutes","map","route","i","helpers_namespaceObject","key","exact","App","react","fallback","es","react_toastify","autoClose","Helpers","engine_routes","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","app","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f4b27579.chunk.js","sourcesContent":["let initialState = { }\n\nexport default function WelcomeReducer(state = initialState, action) {\n    switch (action.type) {\n\n        case 'TEST/ACTION/SUCCESS' :\n            return {\n                ...state,\n                ...action.payload,\n            } \n\n        default:\n            return state\n    }\n}","import WelcomeReducer from './WelcomeReducer';\n\nexport default {\n\twelcome : WelcomeReducer\n}","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\nimport appReducer from '../../application/reducers';\n\nconst rootReducer = combineReducers({\n\tform : formReducer,\n\t...appReducer\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst reduxLogger = createLogger();\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, reduxLogger))\n\nexport default store","import React from 'react';\nimport axios from 'axios';\nimport { createMemoryHistory } from 'history';\nimport { Route, Redirect } from 'react-router-dom';\nimport { createBrowserHistory as createHistory } from 'history'\nimport { toast } from 'react-toastify';\nimport { startSubmit, stopSubmit, reset } from 'redux-form';\nimport store from '../../system/engine/store'\n\nexport const history = typeof window === 'undefined'? createMemoryHistory() : createHistory();\n\n\nexport function ajaxRequest(args = {}) {\n    args.url = `${process.env.REACT_APP_API_URL}/${args.url}`\n    console.log('ajaxRequest => ', args.url)\n    let headers = {apikey: process.env.REACT_APP_API_KEY, apisecret: process.env.REACT_APP_API_SECRET}\n    return axios({...args, headers: headers });\n}\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        localStorage.getItem('user')\n            ? <Component {...props} />\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n    )} />\n)\n\nexport function submitStart(form_name) {\n    store.dispatch(startSubmit(form_name))\n}\n\nexport function formSuccessHandler(form_name, message){\n    if (form_name !== undefined) {\n        if (typeof message === 'string') toast.success(message);\n        store.dispatch(stopSubmit(form_name))\n        store.dispatch(reset(form_name))\n    }\n}\n\nexport function formErrorHandler(form_name, error){\n    if (form_name !== undefined) {\n        if (error.response === undefined) {\n            return toast.error(\"Server not responding\");\n        }\n\n        if (typeof error.response.data.message === 'string') {\n            toast.success(error.response.data.message);\n            store.dispatch(stopSubmit(form_name))\n        }\n        if (typeof error.response.data.message === 'object') {\n            store.dispatch(stopSubmit(form_name, error.response.data.message))\n        } \n    }\n}\n\nexport function getLoggedInUser() {\n    return JSON.parse(localStorage.getItem('user'));\n}\n\nexport function succesMessage(message) {\n    toast.success(message);\n}\n\nexport function serverErrorHandler(error,  form_name){\n    if (error.response === undefined) {\n        return toast.error(\"Server not responding\");\n    } \n\n    if (error.response.data && error.response.data.status === 401) {\n        return toast.error(error.response.data.message);\n    }\n\n    if (error.response.data && error.response.data.status === 404) {\n        return toast.error(error.response.data.message);\n    }\n\n    if (error.response.data && error.response.data.status === 405) {\n        return toast.error(error.response.data.message);\n    }\n    \n    if (error.response.data && error.response.data.status === 422) {\n        toast.error(\"422 Validation Error\");\n    }\n    \n    if (error.response.data && error.response.data.status === 500) {\n        return toast.error(\"500 Internal Server Error\");\n    } \n\n    if (error.response.data && error.response.data.status === 502) {\n        return toast.error(\"502 Bad Gateway\");\n    }\n}\n","import React from 'react';\n\nconst WelcomePage \t= React.lazy(() => import('../views/pages/Welcome'))\nconst Page404       = React.lazy(() => import('../views/pages/NotFound'))\n\nexport default [\n\t{\n        path: \"/\",\n        component: WelcomePage,\n        private: false\n    },\n    {\n        path: \"*\",\n        component: Page404,\n        private: false\n    },\n]","import React, { Component } from 'react';\nimport { Route, Switch }    from 'react-router-dom';\nimport { Helpers }      \tfrom '../../application/helpers'\nimport appRoutes \t\t\tfrom '../../application/routes/Routes'\n\nclass Routes extends Component {\n    \n    render() {\n\n    \tlet routes = [...appRoutes]\n\n        return (<Switch>\n\t\t\t\t{ routes.map((route, i) => route.private === true ? <Helpers.PrivateRoute key={i} exact={true} {...route} /> : <Route key={i} exact={true} {...route} />)}\n\t\t\t</Switch>\n        );\n    }\n}\n\nexport default  Routes","import React, { Component, Suspense } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { Helpers } from '../../application/helpers';\nimport Routes from './routes';\nimport '../../application/views/assets/css/App.css'\n\nconsole.log(process.env.REACT_APP_API_URL)\n\n\nclass App extends Component {\n  \trender() {\n    \treturn (\n\t\t\t<Suspense fallback={<div>Loading...</div>}>\n\t\t\t\t<Provider store={store}>\n\t\t\t\t\t<ToastContainer autoClose={2000}/> \n\t\t\t\t\t<Router history={Helpers.history}>\n\t\t\t\t\t\t<Routes/>\n\t\t\t\t\t</Router>\n\t\t\t\t</Provider>\n\t\t\t</Suspense>\n    \t)\n  \t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}